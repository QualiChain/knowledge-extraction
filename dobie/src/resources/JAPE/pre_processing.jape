Phase:	preProcessing
Input: Token SpaceToken Lookup
Options: control = appelt
	


Rule:	skill
Priority: 40
(
  (        
	{Lookup.type == "instance", Lookup.classURI == "http://w3id.org/saro/Product"}|
	{Lookup.type == "instance", Lookup.classURI == "http://w3id.org/saro/Tool"}|
	{Lookup.type == "instance", Lookup.classURI == "http://w3id.org/saro/Topic"}
  ): label
  ({SpaceToken}|{Token.kind == punctuation})
)  
-->
{
	gate.AnnotationSet saroSkills = (gate.AnnotationSet)bindings.get("label"); 
	gate.Annotation saroSkill = saroSkills.iterator().next();
	String uri = (String)saroSkill.getFeatures().get("URI");
	int hashtagpos = uri.lastIndexOf("/");
	String str = uri.substring(hashtagpos+1,uri.length());
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("rule", "skill");
	features.put("kind", "skill");	
	features.put("classURI", saroSkill.getFeatures().get("classURI").toString());	
	features.put("string", str);	
	
	String peropertyValue = "";
	if(saroSkill.getFeatures().get("propertyValue") != null) {
		peropertyValue = saroSkill.getFeatures().get("propertyValue").toString();
		features.put("label", peropertyValue);	
		peropertyValue = peropertyValue.toLowerCase().replaceAll(" " , "");
	}else{
		peropertyValue = str.toLowerCase();
	}


	String tokensStr = "";
	try{
		tokensStr = doc.getContent().getContent(saroSkill.getStartNode().getOffset(), saroSkill.getEndNode().getOffset()).toString();
		if(saroSkill.getFeatures().get("propertyValue") == null) {
			features.put("label", tokensStr);	
		}		
		tokensStr = tokensStr.toLowerCase().replaceAll(" " , "");

	}catch(Exception e){
		e.printStackTrace();
	}
	
	if(peropertyValue.equals(tokensStr)){
		outputAS.add(saroSkills.firstNode(), saroSkills.lastNode(), "saroSkill", features);
	}
}
  

Rule: enumerator
Priority: 50

(
({Token.kind == punctuation , Token.string == "("})?
({Token.string == "i"}|{Token.string == "ii"}|{Token.string == "iii"}|{Token.string == "iv"}|{Token.string == "v"}|{Token.string == "vi"}|
{Token.string == "vii"}|{Token.string == "viii"}|{Token.string == "ix"}|{Token.string == "x"}|{Token.string == "xi"}|{Token.string == "xii"}|
{Token.string == "xiii"}|{Token.string == "xiv"}|{Token.string == "xv"}|{Token.string == "xvi"}|
{Token.string == "I"}|{Token.string == "II"}|{Token.string == "III"}|{Token.string == "IV"}|{Token.string == "V"}|{Token.string == "VI"}|
{Token.string == "VII"}|{Token.string == "VIII"}|{Token.string == "IX"}|{Token.string == "X"}|{Token.string == "XI"}|{Token.string == "XII"}|
{Token.string == "XIII"}|{Token.string == "XIV"}|{Token.string == "XV"}|{Token.string == "XVI"}|{Token.kind == word, Token.length == 1}|{Token.kind == number}|
({Token.kind == number}{Token.kind == word, Token.length == 1}))
{Token.kind == punctuation , Token.string == ")"}
): label
-->
:label.Enumerator = {kind = "enumerator1", rule = "enumerator"}



Rule: greekNum
(
{Token.string == "i"}|{Token.string == "ii"}|{Token.string == "iii"}|{Token.string == "iv"}|{Token.string == "v"}|{Token.string == "vi"}|
{Token.string == "vii"}|{Token.string == "viii"}|{Token.string == "ix"}|{Token.string == "x"}|{Token.string == "xi"}|{Token.string == "xii"}|
{Token.string == "xiii"}|{Token.string == "xiv"}|{Token.string == "xv"}|{Token.string == "xvi"}|
{Token.string == "I"}|{Token.string == "II"}|{Token.string == "III"}|{Token.string == "IV"}|{Token.string == "V"}|{Token.string == "VI"}|
{Token.string == "VII"}|{Token.string == "VIII"}|{Token.string == "IX"}|{Token.string == "X"}|{Token.string == "XI"}|{Token.string == "XII"}|
{Token.string == "XIII"}|{Token.string == "XIV"}|{Token.string == "XV"}|{Token.string == "XVI"}
): label
-->
:label.GreekNumber = {kind = "greekNum", rule = "greekNum"}



Rule:	bachelor
  (        
	({Token.string == "B"}{Token.string == ".", Token.kind == punctuation}{Token.string == "S"}{Token.string == ".", Token.kind == punctuation})|
	({Token.string == "B"}{Token.string == ".", Token.kind == punctuation}{Token.string == "Sc"}{Token.string == ".", Token.kind == punctuation})|
	{Token.root == "bsc"}|{Token.string == "BS"}	
  )
:label -->
  :label.CertificateDegree = {kind = "degree", rule = "bachelor", string = "bsc"}


Rule:	master
  (        
	({Token.string == "M"}{Token.string == ".", Token.kind == punctuation}{Token.string == "S"}{Token.string == ".", Token.kind == punctuation})|
	({Token.string == "M"}{Token.string == ".", Token.kind == punctuation}{Token.string == "Sc"}{Token.string == ".", Token.kind == punctuation})|
	{Token.root == "msc"}|{Token.string == "MS"}	
  )
:label -->
  :label.CertificateDegree = {kind = "degree", rule = "master", string = "msc"}
  

Rule:	phd
  (        
	({Token.string == "Ph"}{Token.string == ".", Token.kind == punctuation}{Token.string == "D"}{Token.string == ".", Token.kind == punctuation})|
	{Token.root == "phd"}|{Token.string == "DPhil"}	
  )
:label -->
  :label.CertificateDegree = {kind = "degree", rule = "master", string = "phd"}  
  


